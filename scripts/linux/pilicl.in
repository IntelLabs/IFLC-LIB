#!/usr/bin/env bash

if [ -z ${FLRC_BIN_DIR+x} ]; then
  FLRC_BIN_DIR=@bindir@
fi

if [ -z ${FLRC_DATA_DIR+x} ]; then
  FLRC_DATA_DIR=@datadir@/pillar2c
fi

if [ -z ${FLRC_INCLUDE_DIR+x} ]; then
  FLRC_INCLUDE_DIR=@includedir@
fi

if [ -z ${HRC_CC+x} ]; then
  HRC_CC="gcc -w"
fi

unset CPP_ARGS[@]
unset CPP_ARGS_PILLAR[@]
unset CPP_ARGS_P2C[@]
unset CC_ARGS[@]
unset OTHER_ARGS[@]
PILLAR_ONLY=
PILLAR_INPUT=
# Allow RUN_P2C to be passed in as "yes", "no", or blank (default)
#RUN_P2C=
if [ ! "$RUN_P2C" ] ; then
    RUN_P2C=no
fi
P2C_ARGS="-p2c-no-yields -p2c-spill-rare -p2c-gcc -p2c-intel64"
while (( "$#" )) ; do
    arg="$1"
    #echo "Processing arg $arg"
    case "$arg" in
        -p2c) RUN_P2C=yes ;;
        -nop2c) RUN_P2C=no ;;
        -p2c-*) P2C_ARGS="$P2C_ARGS $arg" ;;

        # TODO: Allow these to go through with icc
        [-/]ftz|[-/]no-ftz|[-/]Qftz) ;;
        [-/]prec-div|[-/]no-prec-div|[-/]Qprec-div) ;;
        [-/]prec-sqrt|[-/]no-prec-sqrt|[-/]Qprec-sqrt) ;;
        [-/]no-vec|[-/]Q-vec) ;;
        [-/]ip|[-/]Qip) ;;
        [-/]vec-report0|[-/]Qvec-report0) ;;
        [-/]Qdiag-disable:cpu-dispatch) ;;
        [-/]diag-disable) ;;
        cpu-dispatch) ;;
        [-/]fp-model|fast|source) ;;
        [-/]QxAVX|[-/]xAVX) CC_ARGS[${#CC_ARGS[@]}]="-msse3" ;;

        [-/]Qwd) shift ;;
        [-/]Qwd*|[-/]Od) ;;
        [-/]Qc99|[-/]Qnoyield|[-/]mCG_opt_mask*|[-/]mP2OPT*|[-/]Ob0) PILLAR_ONLY="$PILLAR_ONLY $arg" ;;
        [-/]I*[\\/]include[\\/]prt) CPP_ARGS_PILLAR[${#CPP_ARGS_PILLAR[@]}]="$arg" ; CPP_ARGS_P2C[${#CPP_ARGS_P2C[@]}]="${arg}-pthreads" ;;
        [-/]Qoffset*|[-/]Qtlsregister*) PILLAR_ONLY="$PILLAR_ONLY $arg" ;;
        [-/]MT*) PILLAR_ONLY="$PILLAR_ONLY $arg" ;;
        [-/]Zi) PILLAR_ONLY="$PILLAR_ONLY $arg" ;;
        [-/]debug) CC_ARGS[${#CC_ARGS[@]}]="-g" ;;
        [-/]fp:*|[-/]W*|[-/]Q*) ;;
        [-/]m*|[-/]Zi|[-/]TC|[-/]MT*) ;;
        [-/]c|[-/]O*) CC_ARGS[${#CC_ARGS[@]}]="$arg" ;;
        [-/]Fo*) CC_ARGS[${#CC_ARGS[@]}]="-o" ; reformat="${arg:3}" ; CC_ARGS[${#CC_ARGS[@]}]="`echo $reformat | sed \"s/obj/o/g\"`" ;;
        [-/]DWIN32|[-/]nologo) ;;
        [-/]D*|[-/]I*) CPP_ARGS[${#CPP_ARGS[@]}]="-${arg:1}" ;;
        *.c) PILLAR_INPUT="$arg" ;;
        *) OTHER_ARGS[${#OTHER_ARGS[@]}]="$arg" ;;
    esac
    shift
done

#echo "CPP_ARGS=$CPP_ARGS"
#echo "CC_ARGS=$CC_ARGS"
#echo "PILLAR_ONLY=$PILLAR_ONLY"
#echo "PILLAR_INPUT=$PILLAR_INPUT"
#echo "OTHER_ARGS=$OTHER_ARGS"
OTHER_ARGS[${#OTHER_ARGS[@]}]="-malign-double"
OTHER_ARGS[${#OTHER_ARGS[@]}]="-fno-omit-frame-pointer"
OTHER_ARGS[${#OTHER_ARGS[@]}]="-fno-strict-aliasing"
OTHER_ARGS[${#OTHER_ARGS[@]}]="-fno-reorder-functions"
OTHER_ARGS[${#OTHER_ARGS[@]}]="-fno-schedule-insns2"
#OTHER_ARGS[${#OTHER_ARGS[@]}]="-mregparm=0"

P2C_CPP_ARGS="-DUSE_STDINT -DTBB -DNO_PRSCALL -D__pillar__ -D__pillar2c__ -DPLSR_LINUX -DLINUX"

if [ "$RUN_P2C" == "yes" ] ; then
    echo ${HRC_CC} -m64 -E -I"${FLRC_INCLUDE_DIR}" -D__pillar__ "${CPP_ARGS_P2C[@]}" "${CPP_ARGS[@]}" $P2C_CPP_ARGS ${FLRC_INCLUDE_DIR}/prt/prtcodegenerator.h "$PILLAR_INPUT" \| sed \"s/__extension__//g\" \> "$PILLAR_INPUT".cpp.c && \
    cat ${FLRC_INCLUDE_DIR}/prt/prtcodegenerator.h "$PILLAR_INPUT" | gcc -m64 -E -I"${FLRC_INCLUDE_DIR}" -D__pillar__ "${CPP_ARGS_P2C[@]}" "${CPP_ARGS[@]}" $P2C_CPP_ARGS - | sed "s/__extension__//g" > "$PILLAR_INPUT".cpp.c && \
    echo ${FLRC_BIN_DIR}/pillar2c $P2C_ARGS -p2c-outbase:"$PILLAR_INPUT".p2c -p2c-force-pcdecl:${FLRC_DATA_DIR}/pcdecl.txt "$PILLAR_INPUT".cpp.c && \
    ${FLRC_BIN_DIR}/pillar2c $P2C_ARGS -p2c-outbase:"$PILLAR_INPUT".p2c -p2c-force-pcdecl:${FLRC_DATA_DIR}/pcdecl.txt "$PILLAR_INPUT".cpp.c && \
    echo ${HRC_CC} -m64 -std=c99 "${CC_ARGS[@]}" "${OTHER_ARGS[@]}" -I. -I"${FLRC_INCLUDE_DIR}" "$PILLAR_INPUT".p2c.c && \
    ${HRC_CC} -m64 -std=c99 "${CC_ARGS[@]}" "${OTHER_ARGS[@]}" -I. -I"${FLRC_INCLUDE_DIR}" "$PILLAR_INPUT".p2c.c && \
    true
else
    echo Linux flrc-lib only support p2c.
fi
